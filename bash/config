#
# regular colors
BLACK='\e[0;30m'
RED='\e[0;31m' 
GREEN='\e[0;32m'
YELLOW='\e[0;33m'
BLUE='\e[0;34m'
PURPLE='\e[0;35m'
CYAN='\e[0;36m'
WHITE='\e[0;37m' 

# emphasized (bold) colors
EBLACK='\e[1;30m'
ERED='\e[1;31m' 
EGREEN='\e[1;32m' 
EYELLOW='\e[1;33m'
EBLUE='\e[1;34m'
EPURPLE='\e[1;35m'
ECYAN='\e[1;36m'
EWHITE='\e[1;37m'
   
# underline colors
UBLACK='\e[4;30m' 
URED='\e[4;31m'
UGREEN='\e[4;32m' 
UYELLOW='\e[4;33m'
UBLUE='\e[4;34m'
UPURPLE='\e[4;35m'
UCYAN='\e[4;36m'
UWHITE='\e[4;37m' 

# background colors
BBLACK='\e[40m'
BRED='\e[41m'   
BGREEN='\e[42m'   
BYELLOW='\e[43m'   
BBLUE='\e[44m'   
BPURPLE='\e[45m'   
BCYAN='\e[46m'   
BWHITE='\e[47m'  
 
# text reset
TXTRST='\e[0m'

# get the current git branch
# http://aaroncrane.co.uk/2009/03/git_branch_prompt/
function find_git_branch {
  local dir=. head
      if [ -f "$dir/.git/HEAD" ]; then
          head=$(< "$dir/.git/HEAD")
          if [[ $head == ref:\ refs/heads/* ]]; then
              git_branch="[${head#*/*/}]"
          fi
          return
      fi
  git_branch=''
}

# customized prompt (ex: working/path[branch] $ )
export PS1="\[$EWHITE\]\w\[$WHITE\]\$git_branch \[$EWHITE\]$\[$GREEN\] "